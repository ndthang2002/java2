/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ud16315_lab2;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author admin
 */
public class bai4 extends javax.swing.JFrame {

    /**
     * Creates new form bai4
     */
    public bai4() {
        initComponents();
        tblbang.setRowHeight(30);
        tblbang.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblbang.getColumnModel().getColumn(1).setPreferredWidth(70);
        tblbang.getColumnModel().getColumn(2).setPreferredWidth(40);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        tab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        lblusername = new javax.swing.JLabel();
        lblpassword = new javax.swing.JLabel();
        lblrole = new javax.swing.JLabel();
        txtusername = new javax.swing.JTextField();
        pwfpassword = new javax.swing.JPasswordField();
        rdouser = new javax.swing.JRadioButton();
        rdoadmin = new javax.swing.JRadioButton();
        btnadd = new javax.swing.JButton();
        btnremove = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btnreset = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblbang = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 255));
        jLabel1.setText("User Management");

        lblusername.setText("Username");

        lblpassword.setText("Password");

        lblrole.setText("Role");

        buttonGroup1.add(rdouser);
        rdouser.setText("User");

        buttonGroup1.add(rdoadmin);
        rdoadmin.setText("Admin");

        btnadd.setText("ADD");
        btnadd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btnremove.setText("REMOVE");
        btnremove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnremove.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                btnremoveComponentHidden(evt);
            }
        });
        btnremove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnremoveActionPerformed(evt);
            }
        });

        btnupdate.setText("UPDATE");
        btnupdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btnreset.setText("RESET");
        btnreset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblusername, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtusername, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblrole, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pwfpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rdouser)
                                .addGap(18, 18, 18)
                                .addComponent(rdoadmin))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(btnadd)
                        .addGap(18, 18, 18)
                        .addComponent(btnremove)
                        .addGap(18, 18, 18)
                        .addComponent(btnupdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnreset)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblusername, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtusername, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(pwfpassword, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                        .addGap(2, 2, 2)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblrole)
                    .addComponent(rdouser)
                    .addComponent(rdoadmin))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnadd)
                    .addComponent(btnremove)
                    .addComponent(btnupdate)
                    .addComponent(btnreset))
                .addContainerGap())
        );

        tab.addTab("EDITION", jPanel1);

        tblbang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "USERNAME", "PASSWORD", "ROLE"
            }
        ));
        tblbang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblbangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblbang);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        tab.addTab("LIST", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tab, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//-------------------------------------------------------------------------------------------
    private void btnremoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnremoveActionPerformed
        int remo = JOptionPane.showConfirmDialog(this,
        "Bạn có chắc xóa mục đã chọn không ?","",
        JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(remo == JOptionPane.YES_OPTION){
            removeUser();
            clearForm();
        }else{
            tab.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btnremoveActionPerformed

    private void btnremoveComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_btnremoveComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_btnremoveComponentHidden

    
//-------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------
    

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed

        boolean kiemtra;
        if(txtusername.getText().equals("")||pwfpassword.getText().equals("")){
            kiemtra = false;
            JOptionPane.showMessageDialog(this,"UserName hoặc Password không được để trống");
        }else if(txtusername.getText().length()<5||pwfpassword.getText().length()<5){
            kiemtra = false;
            JOptionPane.showMessageDialog(this, "UserName hoặc Password phải lớn hơn 5 kí tự ");
        }
        else{
            addUser();
            kiemtra = true;
        }       
        
    }//GEN-LAST:event_btnaddActionPerformed
//--------------------------------------------------------------------------------------------- 
    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        updateUser();
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btnresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetActionPerformed
        clearForm();
    }//GEN-LAST:event_btnresetActionPerformed

    private void tblbangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblbangMouseClicked
        selectUser();
    }//GEN-LAST:event_tblbangMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(bai4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(bai4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(bai4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bai4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new bai4().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnremove;
    private javax.swing.JButton btnreset;
    private javax.swing.JButton btnupdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblpassword;
    private javax.swing.JLabel lblrole;
    private javax.swing.JLabel lblusername;
    private javax.swing.JPasswordField pwfpassword;
    private javax.swing.JRadioButton rdoadmin;
    private javax.swing.JRadioButton rdouser;
    private javax.swing.JTabbedPane tab;
    private javax.swing.JTable tblbang;
    private javax.swing.JTextField txtusername;
    // End of variables declaration//GEN-END:variables
    //Khai báo List<User> để chứa danh sách user
    
    List <encapsolate> list = new ArrayList <encapsolate>();
    
    //----------------------------------------------------------------------------------------
    
    
    /*Thêm hàng vào model bằng cách dùng for duyệt từng phần tử của ArrayList.
    Lấy từng phần tử trong ArrayList, tách dữ liệu uername, role và thêm mảng row, cuối cùng
    add row vào model như 1 hàng dữ liệu.
    Lệnh setRowCount(0) để xóa sạch dữ liệu trong model trước khi đổ dữ liệu để tránh trường
    hợp ta gọi hàm fillTable nhiều lần thì dữ liệu sẽ bị trùng lắp lên nhiều lần.*/
    
    void fillTable(){
        DefaultTableModel model = (DefaultTableModel) tblbang.getModel();
        model.setRowCount(0);
        for(encapsolate x : list){
            Object[] row = {x.getUser(),x.getPassword(),x.getRole()};
            model.addRow(row);
        }
    }
    
    
    //----------------------------------------------------------------------------------------
    
    
    /*Đọc dữ liệu username và password được nhập trên form bằng hàm getText().
    Dựa vào radio Admin hay User được chọn thông qua hàm isSelected() để gán quyền cho role
    Sau khi thu thập dữ liệu xong ta tạo ra một user mới từ dữ liệu và trả về cho hàm*/
    encapsolate readform(){
        String user = txtusername.getText();
        String pass = pwfpassword.getText();
        String role = "";
        if(rdoadmin.isSelected()){
            role = "Admin";
        }else{
            role = "User";
        }
        encapsolate x  = new encapsolate(user, pass, role);
        return x;
    }
    
    
    //----------------------------------------------------------------------------------------
    
    
    
    /* Gán thông tin đọc được từ user được truyền vào, đưa lên các TextField username và
    password qua hàm setText().
    Thể hiện radio Admin hay User được chọn thông qua hàm setSelected() dựa vào role */
    void user(encapsolate x){
        txtusername.setText(x.getUser());
        pwfpassword.setText(x.getPassword());
        if(x.getRole().equals("Admin")){
            rdoadmin.setSelected(true);
        }else{
            rdouser.setSelected(true);
        }
    }
    
    
    //----------------------------------------------------------------------------------------
    
    
    /*Tạo một user từ thông tin trên màn hình đọc bằng hàm readForm().
    Thêm user vào list. Đổ dữ liệu lại cho table. Xóa trắng các textField tên Form.
    Xuất hộp thoại thông báo thêm thành công
    Đưa con trỏ đứng tại textField txtUsername.*/
    void addUser(){
        encapsolate x = readform();
        list.add(x);
        fillTable();
        clearForm();
        JOptionPane.showMessageDialog(this, "Đã thêm thành công");
        txtusername.requestFocus();
    }
     
    
    //----------------------------------------------------------------------------------------
    
    
    /**/
    void clearForm(){
        txtusername.setText("");
        pwfpassword.setText("");
        rdoadmin.setSelected(false);
        rdouser.setSelected(false);
        txtusername.requestFocus();
    }
        
    
    //----------------------------------------------------------------------------------------
    
    
    /*Xác định dòng được chọn trên table. Xóa user trong list tại vị trí đã xác định.
    Đổ dữ liệu lại cho table. Xuất hộp thoại thông báo xóa thành công*/
    
    void removeUser(){
        int ind = tblbang.getSelectedRow();
        list.remove(ind);
        fillTable();
        JOptionPane.showMessageDialog(this, "Đã xóa thành công");
    }
       
    
    //----------------------------------------------------------------------------------------
    
    
    /*Xác định dòng được chọn trên table. Đọc dữ liệu trên form
    Xóa mục chọn cũ và Cập nhật user trong list tại vị trí đã xác định. Đổ dữ liệu lại cho table.
    Xuất hộp thoại thông báo cập nhật thành công*/
    void updateUser(){
        int ind = tblbang.getSelectedRow();
        encapsolate x = readform();
        list.remove(ind);
        list.add(ind,x);
        fillTable();
        JOptionPane.showMessageDialog(this, "Đã cập nhật thành công");
    }
    
    private void selectUser(){
        int ind = tblbang.getSelectedRow();
        if(ind < 0 ){
            return;
        }
        encapsolate u = list.get(ind);
        user(u);
        tab.setSelectedIndex(0);
    }
    
    
}
